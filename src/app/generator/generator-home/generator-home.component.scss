.table {
    display: flex;
    border: none;
  }
  
  .row {
    flex: 1;
    display: flex;
  }
  
  .row:first-of-type {
    flex-flow: wrap;
  }
  
  .row .rowspan2 {
    flex: 1 1 100%;
  }
  
  .row div {
    border: none;
    padding: 1em;
    flex: 1;
  }

  // .box {
	// 	background-color: #444;
	// 	color: #fff;
	// 	border-radius: 5px;
	// 	padding: 20px;
	// 	font-size: 150%;
  // }

  .containerX {
    width: 490px;
    height: 210px;
    padding: 5px;
    border: solid 1px #b6b6b6;
    box-sizing: content-box !important;
  }

  .colorNested, .containerX {
    min-height: 384px;
    background: #999999;
  }

  .card-demo mat-card,
.card-demo mat-card-content {
  margin-bottom: 24px;
}

.card-demo mat-card-footer {
  left: 24px;
  margin-bottom: 24px;
}
  
  /* ============================================================== */
  /* if display grid and contents is supported then you may use it  */
  /* ============================================================== */
  /*
  @supports (display:grid) and (display:contents) {
    .table {
      display: grid;
      grid-template-columns: 25% 25% 25% 25%;
      grid-template-areas: "cell1 cell2 cell3 cell3" "cell4 cell4 cell3 cell3";
      border: solid;
    }
    .row {
      display: contents/* hide them in the structure. .row respective children become sibblings *//*
    }
    .row:first-child> :first-child {
      grid-area: cell1;
    }
    .row:first-child div {
      grid-area: cell2;
    }
    .row .cell.rowspan2 {
      grid-area: cell3;
      /*grid-row:span 2; no need if grid-template-area is complete*//*
    }
    div div {
      border: solid;
      padding: 1em;
    }
    .colspan2 {
      grid-area: cell4;
      /*grid-column : span 2; no need if grid-template-area is complete*//*
    }
  }
  */

  body {
    margin: 40px;
  }
  .wrapper {
      // align-content: center;
      width: 100%;
      display: grid;
      grid-gap: 10px;
      grid-template-columns: repeat(auto-fill, minmax(100px, 1fr) ) ;
      background-color: #fff;
      color: #444;
      position: relative;
      // left: 50%;
      // top: 50%;
      // transform: translate(-50%, -50%);
    }
  
    .box {
      background-color: #444;
      color: #fff;
      border-radius: 5px;
      padding: 20px;
      font-size: 150%;
  
    }
  
  .a {
    grid-column: auto / span 2;
  }
  
  .k {
    grid-column: auto / span 3;
  }
  
  .g {
    grid-column: auto / span 2;
    grid-row: auto / span 2;
  }
  
  .grid {
      /**
   * Two columns:
   *  1. the first sized to content,
   *  2. the second receives the remaining space
   *     (but is never smaller than the minimum size of the board
   *     or the game controls, which occupy this column [Figure 4])
   *
   * Three rows:
   *  3. the first sized to content,
   *  4. the middle row receives the remaining space
   *     (but is never smaller than the minimum height
   *      of the board or stats areas)
   *  5. the last sized to content.
   */
  display: grid;
  grid-template-columns:
    /* 1 */ auto
    /* 2 */ 1fr;
  grid-template-rows:
    /* 3 */ auto
    /* 4 */ 1fr
    /* 5 */ auto;
  }